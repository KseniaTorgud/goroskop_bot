import telebot
from telebot import types # –¥–ª—è —É–∫–∞–∑–∞–Ω–∏–µ —Ç–∏–ø–æ–≤
import config
import logging
import os
import json

logging.basicConfig(level=logging.INFO)

BOT_TOKEN = "–í–ê–®_–¢–û–ö–ï–ù_–ó–î–ï–°–¨"

bot = telebot.TeleBot(BOT_TOKEN)
CHANNEL_ID = '-1002034407496'
ADMIN_ID = 2091042930
USERS_FILE = 'users.txt'
HOROSCOPES_FILE = 'horoscopes.json'  # –ò–∑–º–µ–Ω–µ–Ω —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –Ω–∞ JSON
ANGEL_NUMBERS_FILE = 'angel_numbers.json'  # –ò–∑–º–µ–Ω–µ–Ω —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –Ω–∞ JSON
ZODIAC_SIGNS = ["‚ôà–û–≤–µ–Ω", "‚ôâ–¢–µ–ª–µ—Ü", "‚ôä–ë–ª–∏–∑–Ω–µ—Ü—ã", "‚ôã–†–∞–∫", "‚ôå–õ–µ–≤", "‚ôç–î–µ–≤–∞", "‚ôé–í–µ—Å—ã", "‚ôè–°–∫–æ—Ä–ø–∏–æ–Ω", "‚ôê–°—Ç—Ä–µ–ª–µ—Ü", "‚ôë–ö–æ–∑–µ—Ä–æ–≥", "‚ôí–í–æ–¥–æ–ª–µ–π", "‚ôì–†—ã–±—ã"]

def load_angel_numbers():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∞–Ω–≥–µ–ª—å—Å–∫–∏–µ —á–∏—Å–ª–∞ –∏–∑ —Ñ–∞–π–ª–∞ JSON."""
    angel_numbers = {}
    if os.path.exists(ANGEL_NUMBERS_FILE):
        try:
            with open(ANGEL_NUMBERS_FILE, 'r', encoding='utf-8') as f:
                angel_numbers = json.load(f)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∞–Ω–≥–µ–ª—å—Å–∫–∏—Ö —á–∏—Å–µ–ª: {e}")
            angel_numbers = {}  # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–º —Å–ª–æ–≤–∞—Ä–µ–º
    else:
        logging.warning(f"–§–∞–π–ª –∞–Ω–≥–µ–ª—å—Å–∫–∏—Ö —á–∏—Å–µ–ª {ANGEL_NUMBERS_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    return angel_numbers


def save_angel_numbers(angel_numbers):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∞–Ω–≥–µ–ª—å—Å–∫–∏–µ —á–∏—Å–ª–∞ –≤ —Ñ–∞–π–ª JSON."""
    try:
        with open(ANGEL_NUMBERS_FILE, 'w', encoding='utf-8') as f:
            json.dump(angel_numbers, f, ensure_ascii=False, indent=4)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª –∞–Ω–≥–µ–ª—å—Å–∫–∏—Ö —á–∏—Å–µ–ª: {e}")

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–Ω–≥–µ–ª—å—Å–∫–∏–µ —á–∏—Å–ª–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
angel_numbers = load_angel_numbers()


# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–º –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤ ---
def load_horoscopes():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø—ã –∏–∑ —Ñ–∞–π–ª–∞ JSON."""
    horoscopes = {}
    if os.path.exists(HOROSCOPES_FILE):
        try:
            with open(HOROSCOPES_FILE, 'r', encoding='utf-8') as f:
                horoscopes = json.load(f)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤: {e}")
            horoscopes = {sign: f"–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign} –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω." for sign in ZODIAC_SIGNS}
            save_horoscopes(horoscopes)
            return horoscopes
    else:
        horoscopes = {sign: f"–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign} –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω." for sign in ZODIAC_SIGNS}
        save_horoscopes(horoscopes)

    return horoscopes


def save_horoscopes(horoscopes):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø—ã –≤ —Ñ–∞–π–ª JSON."""
    try:
        with open(HOROSCOPES_FILE, 'w', encoding='utf-8') as f:
            json.dump(horoscopes, f, ensure_ascii=False, indent=4)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤: {e}")


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–æ–≤ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
horoscopes = load_horoscopes()





# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ---
def load_users():
    users_data = {}
    if os.path.exists(USERS_FILE):
        try:
            with open(USERS_FILE, 'r', encoding='utf-8') as f:
                for line in f:
                    try:
                        user_id_str, zodiac_sign = line.strip().split(':', 1)
                        users_data[int(user_id_str)] = zodiac_sign
                    except ValueError:
                        logging.warning(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ —Ñ–∞–π–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {line.strip()}")
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")

    return users_data

def save_users(users_data):
    with open(USERS_FILE, 'w', encoding='utf-8') as f:
        for user_id, zodiac_sign in users_data.items():
            f.write(f"{user_id}:{zodiac_sign}\n")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
user_data = load_users()

def is_subscribed(chat_id):
    try:
        user_status = bot.get_chat_member(CHANNEL_ID, chat_id).status
        return user_status in ("member", "administrator", "creator")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

def show_home_button(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–î–æ–º–æ–π'."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_home = types.KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥") #(–î–æ–º–æ–π)
    markup.add(btn_home)
    return markup


def show_main_menu(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ì–æ—Ä–æ—Å–∫–æ–ø", "–ú–∞—Ç—Ä–∏—Ü–∞ —Å—É–¥—å–±—ã", "–ê–Ω–≥–µ–ª—å—Å–∫–∏–µ —á–∏—Å–ª–∞" –∏ "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_horoscope = types.KeyboardButton("üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø")
    #btn_matrix = types.KeyboardButton("‚ú® –ú–∞—Ç—Ä–∏—Ü–∞ —Å—É–¥—å–±—ã")
    btn_angel_numbers = types.KeyboardButton("üòá –ê–Ω–≥–µ–ª—å—Å–∫–∏–µ —á–∏—Å–ª–∞")
    #btn_ask_question = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    markup.add(btn_horoscope, btn_angel_numbers)
    #markup.add(btn_ask_question, btn_matrix)
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª:", reply_markup=markup)

def show_zodiac_signs(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é —Å–æ –∑–Ω–∞–∫–∞–º–∏ –∑–æ–¥–∏–∞–∫–∞ –∏ –∫–Ω–æ–ø–∫–æ–π '–î–æ–º–æ–π'."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btns = [types.KeyboardButton(sign) for sign in ZODIAC_SIGNS]
    markup.add(*btns)
    markup.add(types.KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥"))  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–î–æ–º–æ–π"
    bot.send_photo(chat_id, photo='https://wallpapers.com/images/hd/cancer-zodiac-sign-1920-x-1080-603n4noypvpm7m0k.jpg',
                       caption="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞", reply_markup=markup)



def show_angel_numbers_menu(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é –∞–Ω–≥–µ–ª—å—Å–∫–∏—Ö —á–∏—Å–µ–ª —Å –∫–Ω–æ–ø–∫–æ–π '–ù–∞–∑–∞–¥'."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_back = types.KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥")
    markup.add(btn_back)
    bot.send_message(chat_id, "–ß—Ç–æ —Ç–∞–∫–æ–µ –∞–Ω–≥–µ–ª—å—Å–∫–∏–µ —á–∏—Å–ª–∞?\n\n–ê–Ω–≥–µ–ª—å—Å–∫–∏–µ —á–∏—Å–ª–∞ - —ç—Ç–æ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —á–∏—Å–µ–ª, –∫–æ—Ç–æ—Ä—ã–µ, –∫–∞–∫ —Å—á–∏—Ç–∞–µ—Ç—Å—è, –Ω–µ—Å—É—Ç –≤ —Å–µ–±–µ –ø–æ—Å–ª–∞–Ω–∏—è –æ—Ç –∞–Ω–≥–µ–ª–æ–≤ –∏ –¥—É—Ö–æ–≤–Ω—ã—Ö –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤. –ö–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –∏–º–µ–µ—Ç —Å–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤–∞–º –ø–æ–Ω—è—Ç—å —Ç–µ–∫—É—â—É—é —Å–∏—Ç—É–∞—Ü–∏—é –≤ –∂–∏–∑–Ω–∏, –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É.", reply_markup=markup)
    bot.register_next_step_handler(bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:"), get_birthdate)

def get_birthdate(message):
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã—á–∏—Å–ª—è–µ—Ç —á–∏—Å–ª–æ –∞–Ω–≥–µ–ª–∞."""
    chat_id = message.chat.id
    birthdate = message.text
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã
        day, month, year = map(int, birthdate.split('.'))
        if not (1 <= day <= 31 and 1 <= month <= 12 and 1000 <= year <= 2100):
            raise ValueError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã")

        # –í—ã—á–∏—Å–ª—è–µ–º —á–∏—Å–ª–æ –∞–Ω–≥–µ–ª–∞
        angel_number = calculate_angel_number(day, month, year)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ user_data (–≤–º–µ—Å—Ç–µ —Å–æ –∑–Ω–∞–∫–æ–º –∑–æ–¥–∏–∞–∫–∞)
        zodiac_sign = user_data.get(chat_id, "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω")  # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞, –µ—Å–ª–∏ –µ—Å—Ç—å
        user_data[chat_id] = f"{zodiac_sign}:{birthdate}"  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –∏ –¥–∞—Ç—É
        save_users(user_data)

        # –í—ã–≤–æ–¥–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ –∞–Ω–≥–µ–ª—å—Å–∫–æ–≥–æ —á–∏—Å–ª–∞
        angel_number_str = str(angel_number)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞
        if angel_number_str in angel_numbers:
            bot.send_message(chat_id, f"–í–∞—à–µ –∞–Ω–≥–µ–ª—å—Å–∫–æ–µ —á–∏—Å–ª–æ: {angel_number}\n\n{angel_numbers[angel_number_str]}", reply_markup=show_home_button(chat_id))  # –ö–ª—é—á –¥–µ–ª–∞–µ–º —Å—Ç—Ä–æ–∫–æ–π
        else:
            bot.send_message(chat_id, f"–í–∞—à–µ –∞–Ω–≥–µ–ª—å—Å–∫–æ–µ —á–∏—Å–ª–æ: {angel_number}\n\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–ª—è —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞ –ø–æ–∫–∞ –Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è.", reply_markup=show_home_button(chat_id))

    except ValueError as e:
        bot.send_message(chat_id, f"–û—à–∏–±–∫–∞: \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:", reply_markup=show_home_button(chat_id))
        bot.register_next_step_handler(message, get_birthdate)  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞—Ç—É –µ—â–µ —Ä–∞–∑

def calculate_angel_number(day, month, year):
    """–í—ã—á–∏—Å–ª—è–µ—Ç –∞–Ω–≥–µ–ª—å—Å–∫–æ–µ —á–∏—Å–ª–æ."""
    total = day + month + year
    while total > 9:
        total = sum(map(int, str(total)))
    return total





@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    if is_subscribed(chat_id):
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        show_main_menu(chat_id)
        if chat_id not in user_data:
            user_data[chat_id] = None
            save_users(user_data)
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_check_sub = types.KeyboardButton("‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è")
        markup.add(btn_check_sub)

        bot.send_message(chat_id,
                             "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª: " + f"https://t.me/+cgfnAiJiaTk2NjEy\n\n"
                             "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è' –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏.",
                             reply_markup=markup)
        bot.register_next_step_handler(message, check_subscription)  # –ü–µ—Ä–µ–¥–∞—ë–º message, –∞ –Ω–µ message_id


@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    if is_subscribed(chat_id):
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        show_main_menu(chat_id)
        if chat_id not in user_data:
            user_data[chat_id] = None
            save_users(user_data)
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_check_sub = types.KeyboardButton("‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è")
        markup.add(btn_check_sub)

        bot.send_message(chat_id,
                             "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª: " + f"https://t.me/+cgfnAiJiaTk2NjEy\n\n"
                             "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è' –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏.",
                             reply_markup=markup)
        bot.register_next_step_handler(message, check_subscription)  # –ü–µ—Ä–µ–¥–∞—ë–º message, –∞ –Ω–µ message_id


def check_subscription(message):  # –£–±—Ä–∞–ª–∏ message_id, —Ç–∞–∫ –∫–∞–∫ –Ω–µ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    chat_id = message.chat.id

    if message.text == "‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è":
        if is_subscribed(chat_id):
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
            show_main_menu(chat_id)
            if chat_id not in user_data:
                user_data[chat_id] = None
                save_users(user_data)
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É, –Ω–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è
            bot.send_message(chat_id, "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª")
            # –°–Ω–æ–≤–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn_check_sub = types.KeyboardButton("‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è")
            markup.add(btn_check_sub)

            bot.send_message(chat_id,
                                 "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª: " + f"https://t.me/+cgfnAiJiaTk2NjEy\n\n"
                                 "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è' –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏.",
                                 reply_markup=markup)
            bot.register_next_step_handler(message, check_subscription)
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è'.")
        # –°–Ω–æ–≤–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_check_sub = types.KeyboardButton("‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è")
        markup.add(btn_check_sub)

        bot.send_message(chat_id,
                             "–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª: " + f"https://t.me/+cgfnAiJiaTk2NjEy\n\n"
                             "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è' –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏.",
                             reply_markup=markup)
        bot.register_next_step_handler(message, check_subscription)



def show_matrix_menu(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ–Ω—é "–ú–∞—Ç—Ä–∏—Ü–∞ —Å—É–¥—å–±—ã" —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å" –∏ "–ù–∞–∑–∞–¥"."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_calculate = types.KeyboardButton("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å")
    btn_back = types.KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥")
    markup.add(btn_calculate, btn_back)
    bot.send_message(chat_id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "‚ú® –ú–∞—Ç—Ä–∏—Ü–∞ —Å—É–¥—å–±—ã")
def matrix_sudby_handler(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ú–∞—Ç—Ä–∏—Ü–∞ —Å—É–¥—å–±—ã"."""
    bot.send_message(message.chat.id,
                     "–ú–∞—Ç—Ä–∏—Ü–∞ —Å—É–¥—å–±—ã - —ç—Ç–æ –º–µ—Ç–æ–¥ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ 22 —ç–Ω–µ—Ä–≥–∏—è—Ö –º–∏—Ä–æ–∑–¥–∞–Ω–∏—è. –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–∑–Ω–∞—Ç—å —Å–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ –∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ, –∫–∞—Ä–º–∏—á–µ—Å–∫–∏–µ —É—Ä–æ–∫–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.")
    show_matrix_menu(message.chat.id)


@bot.message_handler(func=lambda message: message.text == "üòá –ê–Ω–≥–µ–ª—å—Å–∫–∏–µ —á–∏—Å–ª–∞")
def angel_numbers_handler(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ê–Ω–≥–µ–ª—å—Å–∫–∏–µ —á–∏—Å–ª–∞"."""
    show_angel_numbers_menu(message.chat.id)


@bot.message_handler(func=lambda message: message.text == "‚¨Ö –ù–∞–∑–∞–¥" or message.text == "‚¨Ö –ù–∞–∑–∞–¥")
def back_to_main_menu(message):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    show_main_menu(message.chat.id)


@bot.message_handler(func=lambda message: message.text == "üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø")
def horoscope_handler(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ì–æ—Ä–æ—Å–∫–æ–ø"."""
    show_zodiac_signs(message.chat.id)



# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞
admin_edit_state = {}


@bot.message_handler(commands=['set'])
def set_horoscope_command(message):
    if message.from_user.id != ADMIN_ID:
        return

    markup = types.InlineKeyboardMarkup()
    for sign in ZODIAC_SIGNS:
        markup.add(types.InlineKeyboardButton(sign, callback_data=f'set_sign:{sign}'))
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞:", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data.startswith('set_sign:'))
def set_sign_callback(call):
    sign = call.data.split(':')[1]
    admin_edit_state[call.from_user.id] = {'sign': sign, 'waiting_for_text': True}
    bot.send_message(call.message.chat.id, f"–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –¥–ª—è {sign}:")
    bot.answer_callback_query(call.id, text=f"–í—ã–±—Ä–∞–Ω –∑–Ω–∞–∫: {sign}")


@bot.message_handler(commands=['angel'])
def set_angel_command(message):
    if message.from_user.id != ADMIN_ID:
        return

    markup = types.InlineKeyboardMarkup()
    for i in range(1, 10):  # –ß–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 9
        markup.add(types.InlineKeyboardButton(str(i), callback_data=f'set_angel:{i}'))  # –ö–ª—é—á –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∞–Ω–≥–µ–ª—å—Å–∫–æ–µ —á–∏—Å–ª–æ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–ø–∏—Å–∞–Ω–∏—è:", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data.startswith('set_angel:'))
def set_angel_callback(call):
    number = call.data.split(':')[1]
    admin_edit_state[call.from_user.id] = {'type': 'angel', 'target': number, 'waiting_for_text': True}  # –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ type
    bot.send_message(call.message.chat.id, f"–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∞–Ω–≥–µ–ª—å—Å–∫–æ–≥–æ —á–∏—Å–ª–∞ {number}:")
    bot.answer_callback_query(call.id, text=f"–í—ã–±—Ä–∞–Ω–æ –∞–Ω–≥–µ–ª—å—Å–∫–æ–µ —á–∏—Å–ª–æ: {number}")


@bot.message_handler(func=lambda message: message.from_user.id == ADMIN_ID)
def process_admin_input(message):
    user_id = message.from_user.id
    if user_id in admin_edit_state and admin_edit_state[user_id]['waiting_for_text']:
        text = message.text
        type = admin_edit_state[user_id]['type']
        target = admin_edit_state[user_id]['target']

        if type == 'horoscope':
            horoscopes[target] = text
            save_horoscopes(horoscopes)
            bot.reply_to(message, f"–ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {target} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.")
        elif type == 'angel':
            angel_numbers[target] = text  # target —É–∂–µ —Å—Ç—Ä–æ–∫–∞
            save_angel_numbers(angel_numbers)
            bot.reply_to(message, f"–û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∞–Ω–≥–µ–ª—å—Å–∫–æ–≥–æ —á–∏—Å–ª–∞ {target} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")

        del admin_edit_state[user_id]



@bot.message_handler(content_types=['text'])
def func(message):
    if message.text in ZODIAC_SIGNS:
        user_data[message.chat.id] = message.text
        save_users(user_data)
        horoscope_text = horoscopes[message.text]
        bot.send_message(message.chat.id, horoscope_text, reply_markup=show_home_button(message.chat.id)) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø –∏ –∫–Ω–æ–ø–∫—É "–î–æ–º–æ–π"
        return

    elif message.text == "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å":
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É —Ä–∞—Å—á–µ—Ç–∞ –º–∞—Ç—Ä–∏—Ü—ã —Å—É–¥—å–±—ã
        bot.send_message(message.chat.id, "–§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –º–∞—Ç—Ä–∏—Ü—ã —Å—É–¥—å–±—ã –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.")
    elif message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –∑–∞–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞
        bot.send_message(message.chat.id, "–§—É–Ω–∫—Ü–∏—è –∑–∞–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.")
    else:
        bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª..")




# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
try:
    bot.polling(none_stop=True)
except Exception as e:
    logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞")
